import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.TemporalAdjusters;
import java.util.ArrayList;
import java.util.List;

public class FileNameGenerator {

    public static List<String> generateExpectedFileNames(LocalDate referenceDate, List<DayOfWeek> daysOfWeek, String fileFormat) {
        List<String> expectedFileNames = new ArrayList<>();
        
        for (DayOfWeek dayOfWeek : daysOfWeek) {
            LocalDate nextCycleDate = referenceDate.with(TemporalAdjusters.nextOrSame(dayOfWeek));
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(fileFormat);
            String formattedDate = nextCycleDate.format(formatter);
            expectedFileNames.add("report-" + formattedDate + ".csv");
        }
        
        return expectedFileNames;
    }
    
    public static void main(String[] args) {
        LocalDate referenceDate = LocalDate.now(); // 현재 날짜를 참조 날짜로 사용
        List<DayOfWeek> daysOfWeek = List.of(DayOfWeek.MONDAY, DayOfWeek.WEDNESDAY, DayOfWeek.FRIDAY, DayOfWeek.SUNDAY); // 파일이 들어올 요일
        String fileFormat = "yyyy-MM-dd"; // 파일 날짜 포맷
        
        List<String> expectedFileNames = generateExpectedFileNames(referenceDate, daysOfWeek, fileFormat);
        expectedFileNames.forEach(System.out::println);
    }


import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

public class YearlyFileNamesGenerator {

    public static List<String> generateYearlyFileNames(LocalDate startDate, DayOfWeek dayOfWeek, String fileFormat) {
        List<String> fileNames = new ArrayList<>();
        LocalDate endDate = startDate.plusYears(1); // 1년 후의 날짜
        
        LocalDate currentDate = startDate;
        while (currentDate.isBefore(endDate)) {
            if (currentDate.getDayOfWeek() == dayOfWeek) {
                fileNames.add("report-" + currentDate.format(DateTimeFormatter.ofPattern(fileFormat)) + ".csv");
                currentDate = currentDate.plusWeeks(1); // 다음 주로 이동
            } else {
                currentDate = currentDate.plusDays(1); // 다음 날로 이동
            }
        }
        
        return fileNames;
    }

    public static void main(String[] args) {
        LocalDate startDate = LocalDate.of(2023, 1, 1); // 시작 날짜 설정
        List<String> fileNames = generateYearlyFileNames(startDate, DayOfWeek.MONDAY, "yyyy-MM-dd");
        fileNames.forEach(System.out::println); // 생성된 파일 이름 출력
    }
}
